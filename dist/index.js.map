{"version":3,"file":"index.js","sources":["../src/focus-target/func.focus-target.ts","../src/focus-target/focus-target.ts","../src/focus-target/event-boundary.tsx"],"sourcesContent":["import { produce } from \"immer\";\r\nimport { Target } from \"../types/index\";\r\nimport { WritableDraft } from \"immer/dist/internal\";\r\n\r\nexport const getUniqueTargetsNames = (targets: Target[]) => {\r\n  const set = new Set<string>();\r\n  targets.forEach((target: Target) => set.add(target.name));\r\n  return Array.from(set);\r\n};\r\n\r\nexport const getTarget = (\r\n  targets: Target[],\r\n  pressedKeys: string[],\r\n  previous?: string\r\n): [boolean, Target | null] => {\r\n  for (let target of targets) {\r\n    for (let targetKeys of target.keys) {\r\n      const sizeMatches = targetKeys.length === pressedKeys.length;\r\n      const keysMatch =\r\n        sizeMatches &&\r\n        targetKeys.reduce(\r\n          (acc: boolean, targetKey: string) =>\r\n            acc ? pressedKeys.includes(targetKey) : false,\r\n          true\r\n        );\r\n      const previousIsSet = target.previous;\r\n      const previousMatch = previous === target.previous;\r\n\r\n      const found = previousIsSet ? previousMatch && keysMatch : keysMatch;\r\n\r\n      if (found) {\r\n        return [true, target];\r\n      }\r\n    }\r\n  }\r\n  return [false, null];\r\n};\r\n\r\nexport const addKey = (keyToAdd: string, pressedKeys: string[]) => {\r\n  const draftFunction = (draft: WritableDraft<string[]>) => {\r\n    !draft.includes(keyToAdd) && draft.push(keyToAdd);\r\n  };\r\n  return produce(pressedKeys, draftFunction);\r\n};\r\n\r\nexport const removeKey = (keyToRemove: string, pressedKeys: string[]) => {\r\n  const draftFunction = (draft: WritableDraft<string[]>) => {\r\n    return draft.filter((key) => key !== keyToRemove);\r\n  };\r\n  return produce(pressedKeys, draftFunction);\r\n};\r\n","import React, { FocusEvent } from \"react\";\r\nimport { Props, Refs, Target } from \"../types/index\";\r\nimport {\r\n  getUniqueTargetsNames,\r\n  getTarget,\r\n  addKey,\r\n  removeKey,\r\n} from \"./func.focus-target\";\r\n\r\nlet pressedKeys: string[] = [];\r\nlet currentlyFocused = \"\";\r\nlet refs: Refs = { current: [] };\r\n\r\nexport default (targets: Target[], global: boolean) : Props => {\r\n  const getRef = (name: string) => {\r\n    for (let ref of refs.current) {\r\n      if (ref.name === name) return ref.ref;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const handleKeyDown = <T>(event: T): void => {\r\n    //@ts-ignore\r\n    pressedKeys = addKey(event.key, pressedKeys);\r\n    const [found, target] = getTarget(targets, pressedKeys, currentlyFocused);\r\n    if (found && target) {\r\n      const ref = getRef(target.name);\r\n      ref && ref.current && ref.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleKeyUp = <T>(event: T): void => {\r\n    //@ts-ignore\r\n    pressedKeys = removeKey(event.key, pressedKeys);\r\n  };\r\n\r\n  const handleFocus = <T extends { name: string }>(event: FocusEvent<T>) => {\r\n    currentlyFocused = event.target.name;\r\n  };\r\n\r\n  const focus = (name: string) => {\r\n    let ref = getRef(name);\r\n    ref && ref.current && ref.current.focus();\r\n  };\r\n\r\n  const setup = () => {\r\n    if (!refs.current.length) {\r\n      refs = {\r\n        current: getUniqueTargetsNames(targets).map((name: string) => ({\r\n          name: name,\r\n          ref: React.createRef<any>(),\r\n        })),\r\n      };\r\n      if (global) {\r\n        window.onkeydown = handleKeyDown;\r\n        window.onkeyup = handleKeyUp;\r\n      }\r\n    }\r\n  };\r\n\r\n  setup();\r\n\r\n  return {\r\n    getRef,\r\n    handleFocus,\r\n    handleKeyDown,\r\n    handleKeyUp,\r\n    focus,\r\n  };\r\n};\r\n","import React, {\r\n  ReactElement,\r\n  cloneElement,\r\n  CSSProperties,\r\n  useEffect,\r\n} from \"react\";\r\nimport { injectProps, Target } from \"../types/index\";\r\nimport FocusTarget from \"./focus-target\";\r\n\r\nconst inject: injectProps = (child, ref, handleFocus) =>\r\n  cloneElement(child, { ref, onFocus: handleFocus });\r\n\r\nconst isSupported = (type: any) => {\r\n  switch (type) {\r\n    case \"input\":\r\n    case \"textarea\":\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nexport const EventBoundary = ({\r\n  targets,\r\n  initialFocus,\r\n  children,\r\n  className,\r\n  style,\r\n}: {\r\n  targets: Target[];\r\n  initialFocus: string;\r\n  children: ReactElement[];\r\n  className?: string;\r\n  style?: CSSProperties;\r\n}) => {\r\n  const {\r\n    getRef,\r\n    handleKeyDown,\r\n    handleKeyUp,\r\n    handleFocus,\r\n    focus,\r\n  } = FocusTarget(targets, false);\r\n\r\n  useEffect(() => {\r\n    focus(initialFocus);\r\n  }, []);\r\n  return (\r\n    <div\r\n      onKeyDown={handleKeyDown}\r\n      onKeyUp={handleKeyUp}\r\n      className={className}\r\n      style={{ outline: \"none\", ...style }}\r\n      tabIndex={1000}\r\n    >\r\n      {children.map((child: ReactElement) =>\r\n        isSupported(child.type)\r\n          ? inject(child, getRef(child.props.name), handleFocus)\r\n          : child\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"names":["getUniqueTargetsNames","targets","set","Set","forEach","target","add","name","Array","from","pressedKeys","currentlyFocused","refs","current","global","getRef","_a","_i","ref","handleKeyDown","event","keyToAdd","produce","draft","includes","push","addKey","key","previous","targets_1","_b","keys","targetKeys","keysMatch","length","reduce","acc","targetKey","previousIsSet","previousMatch","getTarget","found","focus","handleKeyUp","keyToRemove","filter","removeKey","map","React","createRef","window","onkeydown","onkeyup","handleFocus","initialFocus","children","className","style","FocusTarget","useEffect","_jsx","onKeyDown","onKeyUp","outline","tabIndex","child","type","isSupported","cloneElement","onFocus","inject","props"],"mappings":"kaAIaA,EAAwB,SAACC,GACpC,IAAMC,EAAM,IAAIC,IAEhB,OADAF,EAAQG,SAAQ,SAACC,GAAmB,OAAAH,EAAII,IAAID,EAAOE,SAC5CC,MAAMC,KAAKP,ICEhBQ,EAAwB,GACxBC,EAAmB,GACnBC,EAAa,CAAEC,QAAS,eAEZZ,EAAmBa,GACjC,IAAMC,EAAS,SAACR,GACd,IAAgB,QAAAS,EAAAJ,EAAKC,QAALI,WAAAA,IAAc,CAAzB,IAAIC,OACP,GAAIA,EAAIX,OAASA,EAAM,OAAOW,EAAIA,IAEpC,OAAO,MAGHC,EAAgB,SAAIC,GAExBV,EDekB,SAACW,EAAkBX,GAIvC,OAAOY,UAAQZ,GAHO,SAACa,IACpBA,EAAMC,SAASH,IAAaE,EAAME,KAAKJ,MCjB1BK,CAAON,EAAMO,IAAKjB,GAC1B,IAAAM,EDde,SACvBf,EACAS,EACAkB,GAEA,IAAmB,QAAAC,IAAAZ,WAAAA,IACjB,IADG,IAAIZ,WACgByB,EAAAzB,EAAO0B,KAAPf,WAAAA,IAAa,CAA/B,IAAIgB,OAEDC,EADcD,EAAWE,SAAWxB,EAAYwB,QAGpDF,EAAWG,QACT,SAACC,EAAcC,GACb,QAAAD,GAAM1B,EAAYc,SAASa,MAC7B,GAEEC,EAAgBjC,EAAOuB,SACvBW,EAAgBX,IAAavB,EAAOuB,SAI1C,GAFcU,EAAgBC,GAAiBN,EAAYA,EAGzD,MAAO,EAAC,EAAM5B,GAIpB,MAAO,EAAC,EAAO,MCXWmC,CAAUvC,EAASS,EAAaC,GAAjD8B,OAAOpC,OACd,GAAIoC,GAASpC,EAAQ,CACnB,IAAMa,EAAMH,EAAOV,EAAOE,MAC1BW,GAAOA,EAAIL,SAAWK,EAAIL,QAAQ6B,UAIhCC,EAAc,SAAIvB,GAEtBV,EDYqB,SAACkC,EAAqBlC,GAI7C,OAAOY,UAAQZ,GAHO,SAACa,GACrB,OAAOA,EAAMsB,QAAO,SAAClB,GAAQ,OAAAA,IAAQiB,QCdvBE,CAAU1B,EAAMO,IAAKjB,IA6BrC,OAhBOE,EAAKC,QAAQqB,SAChBtB,EAAO,CACLC,QAASb,EAAsBC,GAAS8C,KAAI,SAACxC,GAAiB,OAC5DA,KAAMA,EACNW,IAAK8B,UAAMC,iBAGXnC,IACFoC,OAAOC,UAAYhC,EACnB+B,OAAOE,QAAUT,IAOhB,CACL5B,SACAsC,YA5BkB,SAA6BjC,GAC/CT,EAAmBS,EAAMf,OAAOE,MA4BhCY,gBACAwB,cACAD,MA3BY,SAACnC,GACb,IAAIW,EAAMH,EAAOR,GACjBW,GAAOA,EAAIL,SAAWK,EAAIL,QAAQ6B;;;;;;;;;;;;;;sGCpBT,SAAC1B,OAC5Bf,YACAqD,iBACAC,aACAC,cACAC,UAQM3B,EAMF4B,EAAYzD,GAAS,GALvBc,WACAI,kBACAwB,gBACAU,gBACAX,UAMF,OAHAiB,aAAU,WACRjB,EAAMY,KACL,IAEDM,eACEC,UAAW1C,EACX2C,QAASnB,EACTa,UAAWA,EACXC,SAASM,QAAS,QAAWN,GAC7BO,SAAU,eAETT,EAASR,KAAI,SAACkB,GACb,OA3CY,SAACC,GACnB,OAAQA,GACN,IAAK,QACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,GAqCLC,CAAYF,EAAMC,MA9CE,SAACD,EAAO/C,EAAKmC,GACvC,OAAAe,eAAaH,EAAO,CAAE/C,MAAKmD,QAAShB,IA8C1BiB,CAAOL,EAAOlD,EAAOkD,EAAMM,MAAMhE,MAAO8C,GACxCY"}