{"version":3,"file":"index.js","sources":["../src/focus-target/use-focus-target.ts","../src/focus-target/func.focus-target.ts","../src/focus-target/event-boundary.tsx"],"sourcesContent":["import React, { FocusEvent, useRef, useEffect } from \"react\";\r\nimport { Props, Refs, Target } from \"../types/index\";\r\nimport {\r\n  getUniqueTargetsNames,\r\n  getTarget,\r\n  addKey,\r\n  removeKey,\r\n} from \"./func.focus-target\";\r\n\r\nexport default (targets: Target[], global: boolean): Props => {\r\n  const refs = useRef<Refs>(\r\n    getUniqueTargetsNames(targets).map((name: string) => ({\r\n      name: name,\r\n      ref: React.createRef<any>(),\r\n    }))\r\n  );\r\n  const pressedKeys = useRef<string[]>([]);\r\n  const currentlyFocused = useRef(\"\");\r\n\r\n  const getRef = (name: string) => {\r\n    for (let ref of refs.current) {\r\n      if (ref.name === name) return ref.ref;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const handleKeyDown = <T>(event: T): void => {\r\n    //@ts-ignore\r\n    pressedKeys.current = addKey(event.key, pressedKeys.current);\r\n    const [found, target] = getTarget(\r\n      targets,\r\n      pressedKeys.current,\r\n      currentlyFocused.current\r\n    );\r\n    if (found && target) {\r\n      const ref = getRef(target.name);\r\n      ref && ref.current && ref.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleKeyUp = <T>(event: T): void => {\r\n    //@ts-ignore\r\n    pressedKeys.current = removeKey(event.key, pressedKeys.current);\r\n  };\r\n\r\n  const handleFocus = <T extends { name: string }>(event: FocusEvent<T>) => {\r\n    currentlyFocused.current = event.target.name;\r\n  };\r\n\r\n  const focus = (name: string) => {\r\n    let ref = getRef(name);\r\n    ref && ref.current && ref.current.focus();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (global) {\r\n      window.onkeydown = handleKeyDown;\r\n      window.onkeyup = handleKeyUp;\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    getRef,\r\n    handleFocus,\r\n    handleKeyDown,\r\n    handleKeyUp,\r\n    focus,\r\n  };\r\n};\r\n","import { produce } from \"immer\";\r\nimport { Target } from \"../types/index\";\r\nimport { WritableDraft } from \"immer/dist/internal\";\r\n\r\nexport const getUniqueTargetsNames = (targets: Target[]) => {\r\n  const set = new Set<string>();\r\n  targets.forEach((target: Target) => set.add(target.name));\r\n  return Array.from(set);\r\n};\r\n\r\nexport const getTarget = (\r\n  targets: Target[],\r\n  pressedKeys: string[],\r\n  previous?: string\r\n): [boolean, Target | null] => {\r\n  for (let target of targets) {\r\n    for (let targetKeys of target.keys) {\r\n      const sizeMatches = targetKeys.length === pressedKeys.length;\r\n      const keysMatch =\r\n        sizeMatches &&\r\n        targetKeys.reduce(\r\n          (acc: boolean, targetKey: string) =>\r\n            acc ? pressedKeys.includes(targetKey) : false,\r\n          true\r\n        );\r\n      const previousIsSet = target.previous;\r\n      const previousMatch = previous === target.previous;\r\n\r\n      const found = previousIsSet ? previousMatch && keysMatch : keysMatch;\r\n\r\n      if (found) {\r\n        return [true, target];\r\n      }\r\n    }\r\n  }\r\n  return [false, null];\r\n};\r\n\r\nexport const addKey = (keyToAdd: string, pressedKeys: string[]) => {\r\n  const draftFunction = (draft: WritableDraft<string[]>) => {\r\n    !draft.includes(keyToAdd) && draft.push(keyToAdd);\r\n  };\r\n  return produce(pressedKeys, draftFunction);\r\n};\r\n\r\nexport const removeKey = (keyToRemove: string, pressedKeys: string[]) => {\r\n  const draftFunction = (draft: WritableDraft<string[]>) => {\r\n    return draft.filter((key) => key !== keyToRemove);\r\n  };\r\n  return produce(pressedKeys, draftFunction);\r\n};\r\n","import React, {\r\n  ReactElement,\r\n  cloneElement,\r\n  CSSProperties,\r\n  useEffect,\r\n} from \"react\";\r\nimport { injectProps, Target } from \"../types/index\";\r\nimport FocusTarget from \"./use-focus-target\";\r\n\r\nconst inject: injectProps = (child, ref, handleFocus) =>\r\n  cloneElement(child, { ref, onFocus: handleFocus });\r\n\r\nconst isSupported = (type: any) => {\r\n  switch (type) {\r\n    case \"input\":\r\n    case \"textarea\":\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nexport const EventBoundary = ({\r\n  targets,\r\n  initialFocus,\r\n  children,\r\n  className,\r\n  style,\r\n}: {\r\n  targets: Target[];\r\n  initialFocus: string;\r\n  children: ReactElement[];\r\n  className?: string;\r\n  style?: CSSProperties;\r\n}) => {\r\n  const {\r\n    getRef,\r\n    handleKeyDown,\r\n    handleKeyUp,\r\n    handleFocus,\r\n    focus,\r\n  } = FocusTarget(targets, false);\r\n\r\n  useEffect(() => {\r\n    focus(initialFocus);\r\n  }, []);\r\n  return (\r\n    <div\r\n      onKeyDown={handleKeyDown}\r\n      onKeyUp={handleKeyUp}\r\n      className={className}\r\n      style={{ outline: \"none\", ...style }}\r\n      tabIndex={1000}\r\n    >\r\n      {children.map((child: ReactElement) =>\r\n        isSupported(child.type)\r\n          ? inject(child, getRef(child.props.name), handleFocus)\r\n          : child\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"names":["targets","global","refs","useRef","set","Set","forEach","target","add","name","Array","from","getUniqueTargetsNames","map","ref","React","createRef","pressedKeys","currentlyFocused","getRef","_a","current","_i","handleKeyDown","event","keyToAdd","produce","draft","includes","push","addKey","key","previous","targets_1","_b","keys","targetKeys","keysMatch","length","reduce","acc","targetKey","previousIsSet","previousMatch","getTarget","found","focus","handleKeyUp","keyToRemove","filter","removeKey","useEffect","window","onkeydown","onkeyup","handleFocus","initialFocus","children","className","style","FocusTarget","_jsx","onKeyDown","onKeyUp","outline","tabIndex","child","type","isSupported","cloneElement","onFocus","inject","props"],"mappings":"6aASgBA,EAAmBC,GACjC,IAAMC,EAAOC,SCNsB,SAACH,GACpC,IAAMI,EAAM,IAAIC,IAEhB,OADAL,EAAQM,SAAQ,SAACC,GAAmB,OAAAH,EAAII,IAAID,EAAOE,SAC5CC,MAAMC,KAAKP,GDIhBQ,CAAsBZ,GAASa,KAAI,SAACJ,GAAiB,OACnDA,KAAMA,EACNK,IAAKC,UAAMC,iBAGTC,EAAcd,SAAiB,IAC/Be,EAAmBf,SAAO,IAE1BgB,EAAS,SAACV,GACd,IAAgB,QAAAW,EAAAlB,EAAKmB,QAALC,WAAAA,IAAc,CAAzB,IAAIR,OACP,GAAIA,EAAIL,OAASA,EAAM,OAAOK,EAAIA,IAEpC,OAAO,MAGHS,EAAgB,SAAIC,GAExBP,EAAYI,QCUM,SAACI,EAAkBR,GAIvC,OAAOS,UAAQT,GAHO,SAACU,IACpBA,EAAMC,SAASH,IAAaE,EAAME,KAAKJ,MDZlBK,CAAON,EAAMO,IAAKd,EAAYI,SAC9C,IAAAD,ECnBe,SACvBpB,EACAiB,EACAe,GAEA,IAAmB,QAAAC,IAAAX,WAAAA,IACjB,IADG,IAAIf,WACgB2B,EAAA3B,EAAO4B,KAAPf,WAAAA,IAAa,CAA/B,IAAIgB,OAEDC,EADcD,EAAWE,SAAWrB,EAAYqB,QAGpDF,EAAWG,QACT,SAACC,EAAcC,GACb,QAAAD,GAAMvB,EAAYW,SAASa,MAC7B,GAEEC,EAAgBnC,EAAOyB,SACvBW,EAAgBX,IAAazB,EAAOyB,SAI1C,GAFcU,EAAgBC,GAAiBN,EAAYA,EAGzD,MAAO,EAAC,EAAM9B,GAIpB,MAAO,EAAC,EAAO,MDNWqC,CACtB5C,EACAiB,EAAYI,QACZH,EAAiBG,SAHZwB,OAAOtC,OAKd,GAAIsC,GAAStC,EAAQ,CACnB,IAAMO,EAAMK,EAAOZ,EAAOE,MAC1BK,GAAOA,EAAIO,SAAWP,EAAIO,QAAQyB,UAIhCC,EAAc,SAAIvB,GAEtBP,EAAYI,QCGS,SAAC2B,EAAqB/B,GAI7C,OAAOS,UAAQT,GAHO,SAACU,GACrB,OAAOA,EAAMsB,QAAO,SAAClB,GAAQ,OAAAA,IAAQiB,QDLfE,CAAU1B,EAAMO,IAAKd,EAAYI,UAmBzD,OAPA8B,aAAU,WACJlD,IACFmD,OAAOC,UAAY9B,EACnB6B,OAAOE,QAAUP,KAElB,IAEI,CACL5B,SACAoC,YAlBkB,SAA6B/B,GAC/CN,EAAiBG,QAAUG,EAAMjB,OAAOE,MAkBxCc,gBACAwB,cACAD,MAjBY,SAACrC,GACb,IAAIK,EAAMK,EAAOV,GACjBK,GAAOA,EAAIO,SAAWP,EAAIO,QAAQyB;;;;;;;;;;;;;;sGE7BT,SAAC1B,OAC5BpB,YACAwD,iBACAC,aACAC,cACAC,UAQMzB,EAMF0B,EAAY5D,GAAS,GALvBmB,WACAI,kBACAwB,gBACAQ,gBACAT,UAMF,OAHAK,aAAU,WACRL,EAAMU,KACL,IAEDK,eACEC,UAAWvC,EACXwC,QAAShB,EACTW,UAAWA,EACXC,SAASK,QAAS,QAAWL,GAC7BM,SAAU,eAETR,EAAS5C,KAAI,SAACqD,GACb,OA3CY,SAACC,GACnB,OAAQA,GACN,IAAK,QACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,GAqCLC,CAAYF,EAAMC,MA9CE,SAACD,EAAOpD,EAAKyC,GACvC,OAAAc,eAAaH,EAAO,CAAEpD,MAAKwD,QAASf,IA8C1BgB,CAAOL,EAAO/C,EAAO+C,EAAMM,MAAM/D,MAAO8C,GACxCW"}