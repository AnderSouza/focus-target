{"version":3,"file":"index.js","sources":["../src/focus-target/use-focus-target.ts","../src/focus-target/focus-target.tsx"],"sourcesContent":["import React, {\r\n  KeyboardEvent,\r\n  FocusEvent,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n} from \"react\";\r\nimport { produce } from \"immer\";\r\nimport { Config, Target, Props } from \"../types/index\";\r\nimport { WritableDraft } from \"immer/dist/internal\";\r\n\r\nexport const getUniqueTargetsNames = (targets: Target[]) => {\r\n  const set = new Set<string>();\r\n  targets.forEach((target: Target) => set.add(target.name));\r\n  return Array.from(set);\r\n};\r\n\r\nexport const getTarget = (\r\n  targets: Target[],\r\n  pressedKeys: string[],\r\n  previous?: string\r\n): [boolean, Target | null] => {\r\n  for (let target of targets) {\r\n    for (let targetKeys of target.keys) {\r\n      const sizeMatches = targetKeys.length === pressedKeys.length;\r\n      const keysMatch =\r\n        sizeMatches &&\r\n        targetKeys.reduce(\r\n          (acc: boolean, targetKey: string) =>\r\n            acc ? pressedKeys.includes(targetKey) : false,\r\n          true\r\n        );\r\n      const previousIsSet = target.previous;\r\n      const previousMatch = previous === target.previous;\r\n\r\n      const found = previousIsSet ? previousMatch && keysMatch : keysMatch;\r\n\r\n      if (found) {\r\n        return [true, target];\r\n      }\r\n    }\r\n  }\r\n  return [false, null];\r\n};\r\n\r\nexport const addKey = (keyToAdd: string, pressedKeys: string[]) => {\r\n  const draftFunction = (draft: WritableDraft<string[]>) => {\r\n    !draft.includes(keyToAdd) && draft.push(keyToAdd);\r\n  };\r\n  return produce(pressedKeys, draftFunction);\r\n};\r\n\r\nexport const removeKey = (keyToRemove: string, pressedKeys: string[]) => {\r\n  const draftFunction = (draft: WritableDraft<string[]>) => {\r\n    return draft.filter((key) => key !== keyToRemove);\r\n  };\r\n  return produce(pressedKeys, draftFunction);\r\n};\r\n\r\nexport const useFocusTarget = (config: Config): Props => {\r\n  const value: string[] = [];\r\n  const [pressedKeys, setPressedKeys] = useState(value);\r\n\r\n  const [currentlyFocused, setCurrentlyFocused] = useState(\"\");\r\n\r\n  const refs = useRef(\r\n    getUniqueTargetsNames(config.targets).map((name: string) => ({\r\n      name: name,\r\n      ref: React.createRef<any>(),\r\n    }))\r\n  );\r\n\r\n  const getRef = (name: string) => {\r\n    for (let ref of refs.current) {\r\n      if (ref.name === name) return ref.ref;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const handleKeyDown = <T>(event: KeyboardEvent<T>): void =>\r\n    setPressedKeys(addKey(event.key, pressedKeys));\r\n\r\n  const handleKeyUp = <T>(event: KeyboardEvent<T>): void =>\r\n    setPressedKeys(removeKey(event.key, pressedKeys));\r\n\r\n  const handleFocus = <T extends { name: string }>(event: FocusEvent<T>) => {\r\n    setCurrentlyFocused(event.target.name);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let ref = getRef(config.initialFocus.target);\r\n    setTimeout(() => {\r\n      ref && ref.current && ref.current.focus();\r\n    }, config.initialFocus.delay);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const [found, target] = getTarget(\r\n      config.targets,\r\n      pressedKeys,\r\n      currentlyFocused\r\n    );\r\n    if (found && target) {\r\n      const ref = getRef(target.name);\r\n      ref && ref.current && ref.current.focus();\r\n    }\r\n  }, [pressedKeys]);\r\n\r\n  return {\r\n    getRef,\r\n    handleKeyDown,\r\n    handleKeyUp,\r\n    handleFocus,\r\n  };\r\n};\r\n","import React, {\r\n  RefObject,\r\n  ReactElement,\r\n  cloneElement,\r\n  CSSProperties,\r\n} from \"react\";\r\nimport { injectProps, Config } from \"../types/index\";\r\nimport { useFocusTarget } from \"./use-focus-target\";\r\n\r\nconst inject: injectProps = (child, ref, handleFocus) => {\r\n  return cloneElement(child, { ref, onFocus: handleFocus });\r\n};\r\n\r\nconst isSupported = (type: any) => {\r\n  switch (type) {\r\n    case \"input\":\r\n    case \"textarea\":\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nexport const FocusTarget = ({\r\n  config,\r\n  children,\r\n  className,\r\n  style,\r\n}: {\r\n  config: Config;\r\n  children: ReactElement[];\r\n  className?: string;\r\n  style?: CSSProperties;\r\n}) => {\r\n  const { getRef, handleKeyDown, handleKeyUp, handleFocus } = useFocusTarget(\r\n    config\r\n  );\r\n  return (\r\n    <div\r\n      onKeyDown={handleKeyDown}\r\n      onKeyUp={handleKeyUp}\r\n      className={className}\r\n      style={{ outline: \"none\", ...style }}\r\n      tabIndex={1000}\r\n    >\r\n      {children.map((child: ReactElement) =>\r\n        isSupported(child.type)\r\n          ? inject(child, getRef(child.props.name), handleFocus)\r\n          : child\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"names":["useFocusTarget","config","targets","set","_a","useState","pressedKeys","setPressedKeys","_b","currentlyFocused","setCurrentlyFocused","refs","useRef","Set","forEach","target","add","name","Array","from","map","ref","React","createRef","getRef","current","_i","useEffect","initialFocus","setTimeout","focus","delay","previous","targets_1","keys","targetKeys","keysMatch","length","reduce","acc","targetKey","includes","previousIsSet","previousMatch","getTarget","found","handleKeyDown","event","keyToAdd","produce","draft","push","addKey","key","handleKeyUp","keyToRemove","filter","removeKey","handleFocus","children","className","style","_jsx","onKeyDown","onKeyUp","outline","tabIndex","child","type","isSupported","cloneElement","onFocus","inject","props"],"mappings":"mNA2DaA,EAAiB,SAACC,GAC7B,IAjDoCC,EAC9BC,EAiDAC,EAAgCC,WADd,IACjBC,OAAaC,OAEdC,EAA0CH,WAAS,IAAlDI,OAAkBC,OAEnBC,EAAOC,UAtDuBV,EAuDZD,EAAOC,QAtDzBC,EAAM,IAAIU,IAChBX,EAAQY,SAAQ,SAACC,GAAmB,OAAAZ,EAAIa,IAAID,EAAOE,SAC5CC,MAAMC,KAAKhB,IAoDsBiB,KAAI,SAACH,GAAiB,OAC1DA,KAAMA,EACNI,IAAKC,UAAMC,iBAITC,EAAS,SAACP,GACd,IAAgB,QAAAb,EAAAO,EAAKc,QAALC,WAAAA,IAAc,CAAzB,IAAIL,OACP,GAAIA,EAAIJ,OAASA,EAAM,OAAOI,EAAIA,IAEpC,OAAO,MAgCT,OAnBAM,aAAU,WACR,IAAIN,EAAMG,EAAOvB,EAAO2B,aAAab,QACrCc,YAAW,WACTR,GAAOA,EAAII,SAAWJ,EAAII,QAAQK,UACjC7B,EAAO2B,aAAaG,SACtB,IAEHJ,aAAU,WACF,IAAAvB,EAhFe,SACvBF,EACAI,EACA0B,GAEA,IAAmB,QAAAC,IAAAP,WAAAA,IACjB,IADG,IAAIX,WACgBP,EAAAO,EAAOmB,KAAP9B,WAAAA,IAAa,CAA/B,IAAI+B,OAEDC,EADcD,EAAWE,SAAW/B,EAAY+B,QAGpDF,EAAWG,QACT,SAACC,EAAcC,GACb,QAAAD,GAAMjC,EAAYmC,SAASD,MAC7B,GAEEE,EAAgB3B,EAAOiB,SACvBW,EAAgBX,IAAajB,EAAOiB,SAI1C,GAFcU,EAAgBC,GAAiBP,EAAYA,EAGzD,MAAO,EAAC,EAAMrB,GAIpB,MAAO,EAAC,EAAO,MAuDW6B,CACtB3C,EAAOC,QACPI,EACAG,GAHKoC,OAAO9B,OAKd,GAAI8B,GAAS9B,EAAQ,CACnB,IAAMM,EAAMG,EAAOT,EAAOE,MAC1BI,GAAOA,EAAII,SAAWJ,EAAII,QAAQK,WAEnC,CAACxB,IAEG,CACLkB,SACAsB,cA/BoB,SAAIC,GACxB,OAAAxC,EAnCkB,SAACyC,EAAkB1C,GAIvC,OAAO2C,UAAQ3C,GAHO,SAAC4C,IACpBA,EAAMT,SAASO,IAAaE,EAAMC,KAAKH,MAiCzBI,CAAOL,EAAMM,IAAK/C,KA+BjCgD,YA7BkB,SAAIP,GACtB,OAAAxC,EA/BqB,SAACgD,EAAqBjD,GAI7C,OAAO2C,UAAQ3C,GAHO,SAAC4C,GACrB,OAAOA,EAAMM,QAAO,SAACH,GAAQ,OAAAA,IAAQE,QA6BtBE,CAAUV,EAAMM,IAAK/C,KA6BpCoD,YA3BkB,SAA6BX,GAC/CrC,EAAoBqC,EAAMhC,OAAOE,4OC/DV,SAACb,OAC1BH,WACA0D,aACAC,cACAC,UAOMrD,EAAsDR,EAC1DC,GADMuB,WAAQsB,kBAAeQ,gBAAaI,gBAG5C,OACEI,eACEC,UAAWjB,EACXkB,QAASV,EACTM,UAAWA,EACXC,SAASI,QAAS,QAAWJ,GAC7BK,SAAU,eAETP,EAASvC,KAAI,SAAC+C,GACb,OAjCY,SAACC,GACnB,OAAQA,GACN,IAAK,QACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,GA2BLC,CAAYF,EAAMC,MArCE,SAACD,EAAO9C,EAAKqC,GACvC,OAAOY,eAAaH,EAAO,CAAE9C,MAAKkD,QAASb,IAqCjCc,CAAOL,EAAO3C,EAAO2C,EAAMM,MAAMxD,MAAOyC,GACxCS"}